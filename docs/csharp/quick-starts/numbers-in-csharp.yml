documentType: Tutorial
title: "<span data-ttu-id=\"230a6-101\">C# numaraları</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-101\">Numbers in C#</span></span>"
metadata:
  title: "C# numaraları"
  description: "Sayısal türler hakkında Hızlı Başlat bölümünde bu C# etkileşimli olarak öğrenmek için tarayıcınızın kullanacaksınız. C# kod yazmak ve derleme ve kodunuzu doğrudan tarayıcıda çalışan sonuçlarını görmek için paylaşacağız."
  audience: Developer
  ms.custom: mvc
  level: Beginner
  nextTutorialHref: branches-and-loops
  nextTutorialTitle: "<span data-ttu-id=\"230a6-105\">Dal ve C# döngüler</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-105\">Branches and loops in C#</span></span>"
  displayType: two-column
  interactive: csharp
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"230a6-106\">Bu hızlı başlangıç C# sayı türleri hakkında etkileşimli olarak yazma C# ve derleme ve kodunuzu çalıştırmaya sonuçlarını görmek için tarayıcınızı kullanarak öğretilmektedir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-106\">This quick start teaches you about the number types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"230a6-107\">Bir dizi numaraları ve C# matematik işlemleri keşfedin dersleri içerir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-107\">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id=\"230a6-108\">Bu derslerin C# dil temelleri öğretir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-108\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
  ms.openlocfilehash: bc859589078d1e2d16145125a80e738837c1ebf9
  ms.sourcegitcommit: 401c4427a3ec0d1263543033b3084039278509dc
  ms.translationtype: MT
  ms.contentlocale: tr-TR
  ms.lasthandoff: 12/07/2017
- title: "<span data-ttu-id=\"230a6-109\">Tamsayı matematik keşfedin</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-109\">Explore integer math</span></span>"
  durationInMinutes: 4
  content: "<span data-ttu-id=\"230a6-110\">Aşağıdaki kod etkileşimli penceresinde çalıştırın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"230a6-111\">Bunu yapmak için aşağıdaki kod bloğu etkileşimli penceresinde yazın ve tıklatın **çalıştırmak** düğmesi:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-111\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 18;\nint b = 6;\nint c = a + b;\nConsole.WriteLine(c);\n```\n\n<span data-ttu-id=\"230a6-112\">Temel matematik işlemlerden tamsayılı yalnızca gördünüz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-112\">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id=\"230a6-113\">`int` Yazın gösteren bir **tamsayı**, pozitif veya negatif bir tam sayı.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-113\">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id=\"230a6-114\">Kullandığınız `+` toplama simgesi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-114\">You use the `+` symbol for addition.</span></span> <span data-ttu-id=\"230a6-115\">Diğer yaygın matematiksel işlemler tamsayılar şunlardır:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-115\">Other common mathematical operations for integers include:</span></span>\n\n- <span data-ttu-id=\"230a6-116\">`-`için çıkarma</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-116\">`-` for subtraction</span></span>\n- <span data-ttu-id=\"230a6-117\">`*`çarpma için</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-117\">`*` for multiplication</span></span>\n- <span data-ttu-id=\"230a6-118\">`/`bölme için</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-118\">`/` for division</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"230a6-119\">Bu Hızlı Başlangıç, kendi etkileşimli pencerede yazdığınız kodu değiştirerek keşfedebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-119\">Throughout this quick start, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id=\"230a6-120\">Bu hızlı başlangıç her adımda deneyebilirsiniz örnekler verilmektedir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-120\">This quick start provides examples that you can try at each step.</span></span>\n\n<span data-ttu-id=\"230a6-121\">Bu farklı işlemler inceleyerek başlayın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-121\">Start by exploring those different operations.</span></span> <span data-ttu-id=\"230a6-122\">Bu işlemlerin her biri denemek için üçüncü satır değiştirin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-122\">Modify the third line to try each of these operations.</span></span> <span data-ttu-id=\"230a6-123\">Her düzenlemeden sonra tıklatın **çalıştırmak** düğmesi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-123\">After each edit, click the **Run** button.</span></span>\n\n<span data-ttu-id=\"230a6-124\">Çıkarma:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-124\">Subtraction:</span></span>\n\n```csharp\nint c = a - b;\n```\n\n<span data-ttu-id=\"230a6-125\">Çarpma:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-125\">Multiplication:</span></span>\n\n```csharp\nint c = a * b;\n```\n\n<span data-ttu-id=\"230a6-126\">Bölme:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-126\">Division:</span></span> \n\n```csharp\nint c = a / b;\n```\n\n<span data-ttu-id=\"230a6-127\">İsterseniz aynı satırda, birden çok matematik işlemleri gerçekleştirerek de deneyebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-127\">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"230a6-128\">C# (veya herhangi bir programlama dili) keşfetmenizde kodu yazarken hataları hale getireceğiz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"230a6-129\">**Derleyici** bu hatalarını bulmak ve bunları sizin için rapor.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"230a6-130\">Çıktı, hata iletileri içerdiğinde, örnek kod ve düzeltmek görmek için etkileşimli penceresinde kod yakından bakın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"230a6-131\">Bu alıştırmada, C# kod yapısını öğrenmenize yardımcı olur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-131\">That exercise will help you learn the structure of C# code.</span></span>     \n\n> [!NOTE]\n> <span data-ttu-id=\"230a6-132\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-132\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"230a6-133\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-133\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"230a6-134\">İşlem sırası keşfedin</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-134\">Explore order of operations</span></span>"
  durationInMinutes: 7
  content: "<span data-ttu-id=\"230a6-135\">C# dili kurallarla matematik içinde öğrenilen kurallarıyla tutarlı farklı matematik işlemlerinin önceliği tanımlar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-135\">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>\n<span data-ttu-id=\"230a6-136\">Çarpma ve bölme toplama ve çıkarma daha önceliklidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-136\">Multiplication and division take precedence over addition and subtraction.</span></span>\n<span data-ttu-id=\"230a6-137\">Etkileşimli penceresinde aşağıdaki kodu çalıştırarak keşfedin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-137\">Explore that by running the following code in the interactive window:</span></span>\n\n```csharp\nint a = 5;\nint b = 4;\nint c = 2;\nint d = a + b * c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"230a6-138\">Çıktı çarpma toplamadan önce gerçekleştirildiğini gösterir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-138\">The output demonstrates that the multiplication is performed before the addition.</span></span>\n\n<span data-ttu-id=\"230a6-139\">Farklı bir işlem sırasını işlemi parantezler ekleyerek zorlayabilir veya önce gerçekleştirilen işlemler istediğiniz:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-139\">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>\n\n```csharp\nint a = 5;\nint b = 4;\nint c = 2;\nint d = (a  + b) * c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"230a6-140\">Birden çok sayıda farklı işlemler birleştirerek keşfedin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-140\">Explore more by combining many different operations.</span></span> <span data-ttu-id=\"230a6-141\">Yukarıdaki dördüncü satırı şuna ile değiştirin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-141\">Replace the fourth line above with something like this:</span></span>\n\n```csharp\nint d = (a + b) - 6 * c + (12 * 4) / 3 + 12;\n```\n\n<span data-ttu-id=\"230a6-142\">Tamsayıları için ilginç bir davranıştır fark etmiş olabilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-142\">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id=\"230a6-143\">Bir ondalık veya kesir bölümünü eklemek için sonuç bile beklediğiniz zaman tamsayı bölme her zaman bir tamsayı sonuç üretir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-143\">Integer division always produces an integer result, even when you'd expect the result to include a decimal or fractional portion.</span></span>\n\n<span data-ttu-id=\"230a6-144\">Bu davranış görmediyseniz, aşağıdakileri deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-144\">If you haven't seen this behavior, try the following:</span></span>\n\n```csharp\nint a = 7;\nint b = 4;\nint c = 3;\nint d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"230a6-145\">Tıklatın **çalıştırmak** yeniden sonuçları görüntüleyin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-145\">Click **Run** again to see the results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"230a6-146\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-146\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"230a6-147\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-147\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"230a6-148\">Tamsayı duyarlık ve sınırları keşfedin</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-148\">Explore integer precision and limits</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"230a6-149\">Bu son örnekten tamsayı bölme sonucu kesen gösterdi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-149\">That last sample showed you that integer division truncates the result.</span></span>\n<span data-ttu-id=\"230a6-150\">Alma **kalan** kullanarak **modulo** işleci, `%` karakter:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-150\">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>\n\n```csharp\nint a = 7;\nint b = 4;\nint c = 3;\nint d = (a  + b) / c;\nint e = (a + b) % c;\nConsole.WriteLine($\"quotient: {d}\");\nConsole.WriteLine($\"remainder: {e}\");\n```\n\n<span data-ttu-id=\"230a6-151\">C# tamsayı türü başka bir şekilde matematiksel tamsayılar farklıdır: `int` türüne sahip minimum ve maksimum sınırlar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-151\">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id=\"230a6-152\">Bu kod, bu sınırları görmek için etkileşimli penceresinde çalıştırın:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-152\">Run this code in the interactive window to see those limits:</span></span>\n\n```csharp\nint max = int.MaxValue;\nint min = int.MinValue;\nConsole.WriteLine($\"The range of integers is {min} to {max}\");\n```\n\n<span data-ttu-id=\"230a6-153\">Bir hesaplama bu sınırlarını aşıyor bir değer oluşturursa, sahip olduğunuz bir **underflow** veya **taşma** koşulu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-153\">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id=\"230a6-154\">Diğer bir sınırının sarmalamak için yanıt görünür.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-154\">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id=\"230a6-155\">Bu iki satır bir örnek görmek için etkileşimli penceresine ekleyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-155\">Add these two lines to the interactive window to see an example:</span></span>\n\n```csharp\nint what = max + 3;\nConsole.WriteLine($\"An example of overflow: {what}\");\n```\n\n<span data-ttu-id=\"230a6-156\">Yanıt çok düşük (negatif) tamsayı yakın olduğuna dikkat edin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-156\">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id=\"230a6-157\">Aynı olan `min + 2`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-157\">It's the same as `min + 2`.</span></span> <span data-ttu-id=\"230a6-158\">Ek işlemi **taştı** tamsayı izin verilen değerleri.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-158\">The addition operation **overflowed** the allowed values for integers.</span></span>\n<span data-ttu-id=\"230a6-159\">Taşma \"geçici en büyük olası tamsayı değerini küçüğe sarmalar\" yanıt çok büyük negatif bir sayı nedeni.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-159\">The answer is a very large negative number because an overflow \"wraps around\" from the largest possible integer value to the smallest.</span></span>\n\n<span data-ttu-id=\"230a6-160\">Diğer sayısal türler farklı sınırlar ve ne zaman kullanacağınız duyarlık vardır `int` türü gereksinimlerinizi karşılayacak değil.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-160\">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id=\"230a6-161\">Bu sonraki inceleyelim.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-161\">Let's explore those next.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"230a6-162\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-162\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"230a6-163\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-163\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"230a6-164\">Çift tür ile çalışma</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-164\">Work with the double type</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"230a6-165\">`double` Sayısal tür çift duyarlıklı kayan noktalı sayıyı temsil eder.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-165\">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id=\"230a6-166\">Bu koşullar, yeni olabilir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-166\">Those terms may be new to you.</span></span> <span data-ttu-id=\"230a6-167\">A **kayan nokta** sayıdır çok büyük veya küçük büyüklüğü integral olmayan sayılar temsil etmek kullanışlıdır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-167\">A **floating point** number is useful to represent non-integral numbers that may be very large or small in magnitude.</span></span> <span data-ttu-id=\"230a6-168\">**Çift duyarlıklı** daha büyük duyarlık kullanılarak bu sayı depolanır anlamına gelir **tek duyarlıklı**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-168\">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id=\"230a6-169\">Modern bilgisayarlarda tek duyarlıklı sayılar daha çift duyarlıklı kullanmak için daha yaygın bir durumdur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-169\">On modern computers, it is more common to use double precision than single precision numbers.</span></span>\n<span data-ttu-id=\"230a6-170\">İnceleyelim.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-170\">Let's explore.</span></span> <span data-ttu-id=\"230a6-171\">Etkileşimli penceresinde aşağıdaki kodu deneyin ve sonuç bakın:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-171\">Try the following code in the interactive window and see the result:</span></span>\n\n```csharp\ndouble a = 5;\ndouble b = 4;\ndouble c = 2;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"230a6-172\">Yanıt sayının ondalık kısmı içerdiğine dikkat edin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-172\">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id=\"230a6-173\">Double biraz daha karmaşık bir ifadesiyle deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-173\">Try a slightly more complicated expression with doubles:</span></span>\n\n```csharp\ndouble a = 19;\ndouble b = 23;\ndouble c = 8;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"230a6-174\">Bir çift değer aralığını tamsayı değerleri çok daha fazladır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-174\">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id=\"230a6-175\">Etkileşimli penceresinde aşağıdaki kodu deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-175\">Try the following code in the interactive window:</span></span>\n\n```csharp\ndouble max = double.MaxValue;\ndouble min = double.MinValue;\nConsole.WriteLine($\"The range of double is {min} to {max}\");\n```\n\n<span data-ttu-id=\"230a6-176\">Bu değerleri bilimsel gösterimde yazdırılır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-176\">These values are printed out in scientific notation.</span></span> <span data-ttu-id=\"230a6-177\">Sol tarafındaki sayıya `E` significand değil.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-177\">The number to the left of the `E` is the significand.</span></span> <span data-ttu-id=\"230a6-178\">Sağa üs 10 gücünü sayıdır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-178\">The number to the right is the exponent, as a power of 10.</span></span> \n\n<span data-ttu-id=\"230a6-179\">Yalnızca ondalık sayı gibi olarak matematik hataları yuvarlama çiftleri C# olabilir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-179\">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id=\"230a6-180\">Bu kod deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-180\">Try this code:</span></span>\n\n```csharp\ndouble third = 1.0 / 3.0;\nConsole.WriteLine(third);\n```\n\n<span data-ttu-id=\"230a6-181\">Bunu biliyor `0.3` yinelenen tam olarak aynı olup `1/3`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-181\">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>\n\n<span data-ttu-id=\"230a6-182\">***Sınama***</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-182\">***Challenge***</span></span>\n\n<span data-ttu-id=\"230a6-183\">Büyük sayılar, küçük sayılar, çarpma ve bölme kullanarak diğer hesaplamalarla deneyin `double` türü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-183\">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id=\"230a6-184\">Daha karmaşık hesaplamalar deneyin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-184\">Try more complicated calculations.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"230a6-185\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-185\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"230a6-186\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-186\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"230a6-187\">Sabit noktası türleri ile çalışma</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-187\">Work with fixed point types</span></span>"
  durationInMinutes: 8
  content: "<span data-ttu-id=\"230a6-188\">C# temel sayısal türler gördünüz: tamsayılar ve iki katına çıkar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-188\">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id=\"230a6-189\">Bilgi edinmek için bir tür: `decimal` türü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-189\">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id=\"230a6-190\">`decimal` Türüne sahip daha küçük bir aralık daha iyi kesinlik ancak `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-190\">The `decimal` type has a smaller range but greater precision than `double`.</span></span> <span data-ttu-id=\"230a6-191\">Terim **sabit noktası** ondalık (veya ikili noktası) taşınmaz anlamına gelir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-191\">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id=\"230a6-192\">Bir göz atalım:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-192\">Let's take a look:</span></span>\n\n```csharp\ndecimal min = decimal.MinValue;\ndecimal max = decimal.MaxValue;\nConsole.WriteLine($\"The range of the decimal type is {min} to {max}\");\n```\n\n<span data-ttu-id=\"230a6-193\">Aralık değerinden küçük olduğunu fark `double` türü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-193\">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id=\"230a6-194\">Aşağıdaki kod deneyerek decimal türü ile daha iyi kesinlik görebilirsiniz:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-194\">You can see the greater precision with the decimal type by trying the following code:</span></span>\n\n```csharp\ndouble a = 1.0;\ndouble b = 3.0;\nConsole.WriteLine(a / b);\n\ndecimal c = 1.0M;\ndecimal d = 3.0M;\nConsole.WriteLine(c / d);\n```\n\n<span data-ttu-id=\"230a6-195\">`M` Numaraları sonekidir nasıl bir sabit kullanması gerektiğini belirtmek `decimal` türü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-195\">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>\n\n<span data-ttu-id=\"230a6-196\">Decimal türü kullanarak matematik ondalık konumun sağında daha fazla basamağa sahip olmadığına dikkat edin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-196\">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> \n\n<span data-ttu-id=\"230a6-197\">***Sınama***</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-197\">***Challenge***</span></span>\n\n<span data-ttu-id=\"230a6-198\">Farklı sayısal türler gördüğünüze göre 2.50 inç, RADIUS olduğu dairenin alanı hesaplar kod yazın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-198\">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 inches.</span></span> <span data-ttu-id=\"230a6-199\">Unutmayın PI ile çarpılmış dairenin alanı kare RADIUS olduğunu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-199\">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id=\"230a6-200\">Bir ipucu: C# PI için bir sabit içeriyor <xref:System.Math.PI?displayProperty=nameWithType> , bu değer için kullanabilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-200\">One hint: C# contains a constant for PI, <xref:System.Math.PI?displayProperty=nameWithType> that you can use for that value.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"230a6-201\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-201\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"230a6-202\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-202\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"230a6-203\">Tam sınama</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-203\">Complete challenge</span></span>"
  durationInMinutes: 1
  content: "<span data-ttu-id=\"230a6-204\">\"Numaraları C# ' ta\" Hızlı Başlangıç tamamladınız.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-204\">You've completed the \"Numbers in C#\" quick start.</span></span> \n\n<span data-ttu-id=\"230a6-205\">Bu hızlı başlangıçlar kendi geliştirme ortamında devam edebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-205\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"230a6-206\">.NET konu [Get Started 10 dakika içinde](https://www.microsoft.com/net/core) yerel geliştirme ortamınızı ayarlamak için yönergeler içerir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-206\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"230a6-207\">Bunu yaptıktan sonra devam [dallar ve döngüler](branches-and-loops-local.md) yerel ortamınızdaki.</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-207\">Once you've done that, continue with [Branches and loops](branches-and-loops-local.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"230a6-208\">Aşağıdaki konularda C# numaraları hakkında daha fazla bilgi edinebilirsiniz:</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-208\">You can learn more about numbers in C# in the following topics:</span></span>\n\n<span data-ttu-id=\"230a6-209\">[Tam sayı türleri tablosu](../language-reference/keywords/integral-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-209\">[Integral Types Table](../language-reference/keywords/integral-types-table.md) </span></span>  \n<span data-ttu-id=\"230a6-210\">[Kayan nokta türleri tablosu](../language-reference/keywords/floating-point-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-210\">[Floating-Point Types Table](../language-reference/keywords/floating-point-types-table.md) </span></span>  \n<span data-ttu-id=\"230a6-211\">[Yerleşik türler tablosu](../language-reference/keywords/built-in-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-211\">[Built-In Types Table](../language-reference/keywords/built-in-types-table.md) </span></span>  \n<span data-ttu-id=\"230a6-212\">[Örtük sayısal dönüşümler tablosu](../language-reference/keywords/implicit-numeric-conversions-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-212\">[Implicit Numeric Conversions Table](../language-reference/keywords/implicit-numeric-conversions-table.md) </span></span>  \n[<span data-ttu-id=\"230a6-213\">Açık sayısal dönüşümler tablosu</span><span class=\"sxs-lookup\"><span data-stu-id=\"230a6-213\">Explicit Numeric Conversions Table</span></span>](../language-reference/keywords/explicit-numeric-conversions-table.md)\0"
