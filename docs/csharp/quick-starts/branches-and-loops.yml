### YamlMime:Tutorial
title: <span data-ttu-id="51e97-101">Dal ve döngüler</span><span class="sxs-lookup"><span data-stu-id="51e97-101">Branches and loops</span></span>
metadata:
  title: Dal ve döngüler etkileşimli öğreticisini - C# quickstarts
  description: Bu hızlı başlangıcı dallar ve döngüler hakkında C# etkileşimli olarak öğrenmek için tarayıcınızın kullanacaksınız. C# kod yazmanız ve derleme ve kodunuzu doğrudan tarayıcıda çalışan sonuçlarını görebilirsiniz.
  audience: Developer
  level: Beginner
  ms.custom: mvc
  ms.prod: .net
  ms.technology: devlang-csharp
  ms.topic: get-started-article
  displayType: two-column
  interactive: csharp
  nextTutorialHref: interpolated-strings
  nextTutorialTitle: <span data-ttu-id="51e97-105">C# dize ilişkilendirme</span><span class="sxs-lookup"><span data-stu-id="51e97-105">String interpolation in C#</span></span>
  ms.openlocfilehash: 2b04d2ca42906302f4191b618198d7aeb58b83a6
  ms.sourcegitcommit: 2e8acae16ae802f2d6d04e3ce0a6dbf04e476513
  ms.translationtype: MT
  ms.contentlocale: tr-TR
  ms.lasthandoff: 04/18/2018
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="51e97-106">Bu hızlı başlangıç değişkenlerini inceler ve bu değişkenleri esas alarak yürütme yolu değiştirir kodunun nasıl yazılacağını öğretir.</span><span class="sxs-lookup"><span data-stu-id="51e97-106">This quickstart teaches you how to write code that examines variables and changes execution path based on those variables.</span></span> <span data-ttu-id="51e97-107">C# etkileşimli olarak yazma ve derleme ve kodunuzu çalıştırmaya sonuçlarını görmek için tarayıcınızı kullanacaksınız.</span><span class="sxs-lookup"><span data-stu-id="51e97-107">You'll use your browser to write C# interactively and see the results of compiling and running your code.</span></span> <span data-ttu-id="51e97-108">Bu hızlı başlangıç dallanma ve döngü yapıları C# keşfedin dersleri bir dizi içerir.</span><span class="sxs-lookup"><span data-stu-id="51e97-108">This quickstart contains a series of lessons that explore branching and looping constructs in C#.</span></span> <span data-ttu-id="51e97-109">Bu derslerin C# dil temelleri öğretir.</span><span class="sxs-lookup"><span data-stu-id="51e97-109">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="51e97-110">Eğer kullanarak kararlar deyimi</span><span class="sxs-lookup"><span data-stu-id="51e97-110">Make decisions using the if statement</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"51e97-111\">Aşağıdaki kod etkileşimli penceresinde çalıştırın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"51e97-112\">Bunu yapmak için aşağıdaki kod bloğu etkileşimli penceresinde yazın ve tıklatın **çalıştırmak** düğmesi:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 5;\nint b = 6;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10.\");\n```\n\n<span data-ttu-id=\"51e97-113\">Bildirimi değiştirme `b` toplam 10'dan az olmasını sağlayın:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-113\">Modify the declaration of `b` so that the sum is less than 10:</span></span> \n\n```csharp\nint b = 3;\n```\n\n<span data-ttu-id=\"51e97-114\">Tıklatın **çalıştırmak** yeniden düğmesine tıklayın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-114\">Click the **Run** button again.</span></span> <span data-ttu-id=\"51e97-115\">Yanıt 10'dan az olduğundan, hiçbir şey yazdırılır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-115\">Because the answer is less than 10, nothing is printed.</span></span> <span data-ttu-id=\"51e97-116\">**Koşulu** olduğunuz test değer false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-116\">The **condition** you're testing is false.</span></span> <span data-ttu-id=\"51e97-117\">Olası dallarını birini yalnızca yazdıktan çünkü yürütmek için herhangi bir kod olmayan bir `if` deyimi: true dal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-117\">You don't have any code to execute because you've only written one of the possible branches for an `if` statement: the true branch.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"51e97-118\">C# (veya herhangi bir programlama dili) keşfetmenizde kodu yazarken hataları hale getireceğiz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-118\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"51e97-119\">**Derleyici** bu hatalarını bulmak ve bunları sizin için rapor.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-119\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"51e97-120\">Çıktı, hata iletileri içerdiğinde, örnek kod ve düzeltmek görmek için etkileşimli penceresinde kod yakından bakın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-120\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"51e97-121\">Bu alıştırmada, C# kod yapısını öğrenmenize yardımcı olur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-121\">That exercise will help you learn the structure of C# code.</span></span>     \n\n<span data-ttu-id=\"51e97-122\">Bu ilk örnek gücünü gösterir `if` ve boolean türleri.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-122\">This first sample shows the power of `if` and boolean types.</span></span> <span data-ttu-id=\"51e97-123\">A *boolean* iki değerlerden birine sahip bir değişken: `true` veya `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-123\">A *boolean* is a variable that can have one of two values: `true` or `false`.</span></span> <span data-ttu-id=\"51e97-124\">C# özel türünü tanımlayan `bool` boolean değişkenleri için.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-124\">C# defines a special type, `bool` for boolean variables.</span></span> <span data-ttu-id=\"51e97-125\">`if` Deyimi denetler değerini bir `bool`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-125\">The `if` statement checks the value of a `bool`.</span></span> <span data-ttu-id=\"51e97-126\">Değer olduğunda `true`, aşağıdaki deyim `if` yürütür.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-126\">When the value is `true`, the statement following the `if` executes.</span></span> <span data-ttu-id=\"51e97-127\">Aksi takdirde atlanır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-127\">Otherwise, it is skipped.</span></span> \n\n<span data-ttu-id=\"51e97-128\">Bu işlem koşullar denetleniyor ve bu koşullara göre deyimleri yürütme çok güçlü bir özelliktir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-128\">This process of checking conditions and executing statements based on those conditions is very powerful.</span></span> <span data-ttu-id=\"51e97-129\">Daha fazla inceleyelim.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-129\">Let's explore more.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"51e97-130\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-130\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"51e97-131\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-131\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="51e97-132">Olun ve başka birlikte çalışma</span><span class="sxs-lookup"><span data-stu-id="51e97-132">Make if and else work together</span></span>
  durationInMinutes: 10
  content: "\n<span data-ttu-id=\"51e97-133\">Her iki true ve false dallarda farklı kod yürütmek için oluşturduğunuz bir `else` koşul yanlış olduğunda, yürüten dal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-133\">To execute different code in both the true and false branches, you create an `else` branch that executes when the condition is false.</span></span> <span data-ttu-id=\"51e97-134\">Şunu deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-134\">Try this:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10\");\nelse\n    Console.WriteLine(\"The answer is not greater than 10\");\n```\n\n<span data-ttu-id=\"51e97-135\">Deyimi aşağıdaki `else` anahtar sözcüğü yürütür yalnızca sınanan koşul olduğunda `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-135\">The statement following the `else` keyword executes only when the condition being tested is `false`.</span></span> <span data-ttu-id=\"51e97-136\">Birleştirme `if` ve `else` ile boolean koşullar gereksinim duyduğunuz tüm güç sağlar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-136\">Combining `if` and `else` with boolean conditions provides all the power you need.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"51e97-137\">Girinti altında `if` ve `else` deyimleri İnsan okuyucular için değil.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-137\">The indentation under the `if` and `else` statements is for human readers.</span></span>\n> <span data-ttu-id=\"51e97-138\">C# dili girinti veya boşluk önemli olarak kabul etmez.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-138\">The C# language doesn't treat indentation or white space as significant.</span></span> <span data-ttu-id=\"51e97-139\">Deyimi aşağıdaki `if` veya `else` anahtar sözcüğü koşula göre yürütülür.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-139\">The statement following the `if` or `else` keyword will be executed based on the condition.</span></span> <span data-ttu-id=\"51e97-140\">Bu hızlı başlangıç tüm örneklerinde satırlarını deyimleri denetim akışı üzerinde göre Girintile yaygın bir uygulama izleyin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-140\">All the samples in this quickstart follow a common practice to indent lines based on the control flow of statements.</span></span>\n\n<span data-ttu-id=\"51e97-141\">Girinti önemli olmadığı için kullanmanıza gerek `{` ve `}` koşullu yürütür blok parçası olarak birden fazla deyim istediğinizde belirtmek için.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-141\">Because indentation is not significant, you need to use `{` and `}` to indicate when you want more than one statement to be part of the block that executes conditionally.</span></span> <span data-ttu-id=\"51e97-142\">C# programcıları genellikle kullanın Bu küme ayraçları tüm `if` ve `else` yan tümceleri.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-142\">C# programmers typically use those braces on all `if` and `else` clauses.</span></span> <span data-ttu-id=\"51e97-143\">Aşağıdaki örnek ne yeni oluşturduğunuz aynıdır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-143\">The following example is the same as what you just created.</span></span> <span data-ttu-id=\"51e97-144\">Deneyin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-144\">Try it.</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n}\n```\n\n> [!TIP]\n> <span data-ttu-id=\"51e97-145\">Bu hızlı başlangıç kullanılmadıkları tüm kod örnekleri aşağıdaki küme ayraçları dahil kabul yöntemler.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-145\">Through the rest of this quickstart, the code samples all include the braces, following accepted practices.</span></span>\n\n<span data-ttu-id=\"51e97-146\">Daha karmaşık koşullar test edebilirsiniz:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-146\">You can test more complicated conditions:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) && (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"And the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"Or the first number is not greater than the second\");\n}\n```\n\n<span data-ttu-id=\"51e97-147\">`&&` Temsil eder \"ve\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-147\">The `&&` represents \"and\".</span></span> <span data-ttu-id=\"51e97-148\">Bu koşulların her ikisi de true dalında deyimi yürütmek için doğru olması gerektiği anlamına gelir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-148\">It means both conditions must be true to execute the statement in the true branch.</span></span>  <span data-ttu-id=\"51e97-149\">Bunları içine sağlanan bu Ayrıca, her koşullu dal birden fazla deyime olabilir örnekler `{` ve `}`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-149\">These examples also show that you can have multiple statements in each conditional branch, provided you enclose them in `{` and `}`.</span></span>\n\n<span data-ttu-id=\"51e97-150\">Aynı zamanda `||` temsil etmek için \"veya\":</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-150\">You can also use  `||` to represent \"or\":</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) || (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"Or the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"And the first number is not greater than the second\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"51e97-151\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"51e97-152\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="51e97-153">Döngüler işlemleri yinelemek için kullanın</span><span class="sxs-lookup"><span data-stu-id="51e97-153">Use loops to repeat operations</span></span>
  durationInMinutes: 6
  content: "<span data-ttu-id=\"51e97-154\">Daha büyük bir program oluşturmak için başka bir önemli kavram **döngüler**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-154\">Another important concept to create larger programs is **loops**.</span></span> <span data-ttu-id=\"51e97-155\">Döngüler, birden çok kez yürütülen istediğiniz deyimleri yinelemek için kullanacaksınız.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-155\">You'll use loops to repeat statements that you want executed more than once.</span></span> <span data-ttu-id=\"51e97-156\">Bu kod etkileşimli penceresinde deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-156\">Try this code in the interactive window:</span></span>\n\n```csharp\nint counter = 0;\nwhile (counter < 10)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n}\n```\n\n<span data-ttu-id=\"51e97-157\">`while` İfadesi bir koşulu denetler ve deyimi aşağıdaki yürütür `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-157\">The `while` statement checks a condition and executes the statement following the `while`.</span></span> <span data-ttu-id=\"51e97-158\">Koşul denetleme ve koşul yanlış olana kadar bu deyimleri yürütme yinelenir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-158\">It will repeat checking the condition and executing those statements until the condition is false.</span></span>\n\n<span data-ttu-id=\"51e97-159\">Bu örnekte, diğer yeni bir işleç var.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-159\">There's one other new operator in this example.</span></span> <span data-ttu-id=\"51e97-160\">`++` Sonra `counter` değişken **artırma** işleci.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-160\">The `++` after the `counter` variable is the **increment** operator.</span></span> <span data-ttu-id=\"51e97-161\">Sayacın değerine 1 ekler ve bu değeri sayaç değişkeninde depolar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-161\">It adds 1 to the value of counter, and stores that value in the counter variable.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"51e97-162\">Olduğundan emin olun `while` kod yürütmek gibi Döngü koşulu false olarak geçin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-162\">Make sure that the `while` loop condition does switch to false as you execute the code.</span></span> <span data-ttu-id=\"51e97-163\">Aksi takdirde, oluşturduğunuz bir **sonsuz bir döngü** programınızı hiçbir zaman sona ereceği.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-163\">Otherwise, you create an **infinite loop** where your program never ends.</span></span> <span data-ttu-id=\"51e97-164\">Kodunuzun çalıştığı altyapısı için zaman aşımı ve hiçbir çıktı programınızdan göreceği, gösterelim değil.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-164\">Let's not demonstrate that, because the engine that runs your code will time out and you'll see no output from your program.</span></span>\n\n<span data-ttu-id=\"51e97-165\">`while` Döngü kod aşağıdaki yürütmeden önce koşulu sınar `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-165\">The `while` loop tests the condition before executing the code following the `while`.</span></span> <span data-ttu-id=\"51e97-166\">`do` ... `while` döngü kodu ilk yürütür ve koşul denetler.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-166\">The `do` ... `while` loop executes the code first, and then checks the condition.</span></span> <span data-ttu-id=\"51e97-167\">Şöyle görünür:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-167\">It looks like this:</span></span>\n\n```csharp\nint counter = 0;\ndo\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n} while (counter < 10);\n```\n\n<span data-ttu-id=\"51e97-168\">Bu `do` döngü ve önceki `while` döngü çalışır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-168\">This `do` loop and the earlier `while` loop work the same.</span></span> \n\n<span data-ttu-id=\"51e97-169\">Şimdi son döngü ifadesine geçin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-169\">Let's move on to one last loop statement.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"51e97-170\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"51e97-171\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="51e97-172">Çalışmak döngü için</span><span class="sxs-lookup"><span data-stu-id="51e97-172">Work with the for loop</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"51e97-173\">C# kodunda göreceğiniz başka bir ortak döngü deyimi `for` döngü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-173\">Another common loop statement that you'll see in C# code is the `for` loop.</span></span> <span data-ttu-id=\"51e97-174\">Bu kod etkileşimli penceresinde deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-174\">Try this code in the interactive window:</span></span>\n\n```csharp\nfor(int counter = 0; counter < 10; counter++)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n} \n```\n\n<span data-ttu-id=\"51e97-175\">Aynı iş olarak bunu yapar `while` döngü ve `do` zaten kullandığınız döngü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-175\">This does the same work as the `while` loop and the `do` loop you've already used.</span></span> <span data-ttu-id=\"51e97-176\">`for` Deyimi nasıl çalıştığını denetleyen üç bölümden sahiptir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-176\">The `for` statement has three parts that control how it works.</span></span> \n\n<span data-ttu-id=\"51e97-177\">İlk bölümüdür **Başlatıcısı için**: `for counter = 0;` bildiren `counter` döngü değişkendir ve ilk değerini ayarlar `0`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-177\">The first part is the **for initializer**: `for counter = 0;` declares that `counter` is the loop variable, and sets its initial value to `0`.</span></span>\n\n<span data-ttu-id=\"51e97-178\">Orta parçasıdır **koşul için**: `counter < 10` bildirir bu `for` sayacın değeri 10'dan az olduğu sürece yürütme döngü devam eder.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-178\">The middle part is the **for condition**: `counter < 10` declares that this `for` loop continues to execute as long as the value of counter is less than 10.</span></span>\n\n<span data-ttu-id=\"51e97-179\">Son bölümüdür **yineleyici için**: `counter++` blok aşağıdaki yürüttükten sonra Döngü değişkeninin değiştirme belirtir `for` deyimi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-179\">The final part is the **for iterator**: `counter++` specifies how to modify the loop variable after executing the block following the `for` statement.</span></span> <span data-ttu-id=\"51e97-180\">Burada, belirtir `counter` bloğu yürütür her zaman 1 azaltılır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-180\">Here, it specifies that `counter` should be incremented by 1 each time the block executes.</span></span>\n\n<span data-ttu-id=\"51e97-181\">Bu kendinizle deneyin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-181\">Experiment with these yourself.</span></span> <span data-ttu-id=\"51e97-182\">Her birini deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-182\">Try each of the following:</span></span>\n\n- <span data-ttu-id=\"51e97-183\">Farklı bir değer başlatmak için Başlatıcı değiştirin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-183\">Change the initializer to start at a different value.</span></span>\n- <span data-ttu-id=\"51e97-184\">Farklı bir değer durdurmak için koşulunu değiştirin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-184\">Change the condition to stop at a different value.</span></span>\n\n<span data-ttu-id=\"51e97-185\">İşiniz bittiğinde, şimdi taşıma açın yazma bazı kendiniz ne öğrendiğinize kullanmak için kodu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-185\">When you're done, let's move on to write some code yourself to use what you've learned.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"51e97-186\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-186\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"51e97-187\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-187\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="51e97-188">Dal ve döngüler birleştirin</span><span class="sxs-lookup"><span data-stu-id="51e97-188">Combine branches and loops</span></span>
  durationInMinutes: 12
  content: >
    <span data-ttu-id="51e97-189">Gördüğünüz göre `if` deyimi ve C# dil döngü yapıları bkz tüm tamsayılar 1 ila 3 ile tam bölünebilir 20 toplamını bulmak için C# kod yazın.</span><span class="sxs-lookup"><span data-stu-id="51e97-189">Now that you've seen the `if` statement and the looping constructs in the C# language, see if you can write C# code to find the sum of all integers 1 through 20 that are divisible by 3.</span></span>  <span data-ttu-id="51e97-190">Aşağıda, birkaç ipucu verilmiştir:</span><span class="sxs-lookup"><span data-stu-id="51e97-190">Here are a few hints:</span></span>


    - <span data-ttu-id="51e97-191">`%` İşleci, bir bölme işlemi geri kalanı verir.</span><span class="sxs-lookup"><span data-stu-id="51e97-191">The `%` operator gives you the remainder of a division operation.</span></span>

    - <span data-ttu-id="51e97-192">`if` Deyimi, bir sayı toplamı parçası olup olmayacağını görmek için koşul verir.</span><span class="sxs-lookup"><span data-stu-id="51e97-192">The `if` statement gives you the condition to see if a number should be part of the sum.</span></span>

    - <span data-ttu-id="51e97-193">`for` Döngü, 20'den sayılar 1 için bir dizi adımı yineleyin yardımcı olabilir.</span><span class="sxs-lookup"><span data-stu-id="51e97-193">The `for` loop can help you repeat a series of steps for all the numbers 1 through 20.</span></span>


    <span data-ttu-id="51e97-194">Kendiniz deneyin.</span><span class="sxs-lookup"><span data-stu-id="51e97-194">Try it yourself.</span></span> <span data-ttu-id="51e97-195">Ardından nasıl yaptığınız denetleyin.</span><span class="sxs-lookup"><span data-stu-id="51e97-195">Then check how you did.</span></span> <span data-ttu-id="51e97-196">Bir ipucu olarak 63 için bir yanıt almanız gerekir.</span><span class="sxs-lookup"><span data-stu-id="51e97-196">As a hint, you should get 63 for an answer.</span></span>


    > [!NOTE]

    > <span data-ttu-id="51e97-197">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class="sxs-lookup"><span data-stu-id="51e97-197">This online coding experience is in preview mode.</span></span> <span data-ttu-id="51e97-198">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="51e97-198">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="51e97-199">Tam sınama</span><span class="sxs-lookup"><span data-stu-id="51e97-199">Complete challenge</span></span>
  durationInMinutes: 1
  content: "<span data-ttu-id=\"51e97-200\">\"Dallar ve döngüler\" Hızlı Başlangıç tamamladınız.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-200\">You've completed the \"branches and loops\" quickstart.</span></span> \n\n<span data-ttu-id=\"51e97-201\">Bu hızlı başlangıç ipuçları kendi geliştirme ortamı devam edebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-201\">You can continue these quickstarts on your own development environment.</span></span> <span data-ttu-id=\"51e97-202\">Temel bilgileri öğrenmek [yerel geliştirme](local-environment.md) ve bir Hızlı Başlangıç'ı seçin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-202\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"51e97-203\">Bu aynı alıştırma deneyin, sonraki hızlı başlangıç doğrudan taşımak veya yeniden ile başlangıç [C# numaraları](numbers-in-csharp-local.md) hızlı başlangıç.</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-203\">You can try this same exercise, move directly to the next quickstart, or start again at with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"51e97-204\">Bu konularda bu kavramlar hakkında daha fazla bilgi edinebilirsiniz:</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-204\">You can learn more about these concepts in these topics:</span></span>\n\n<span data-ttu-id=\"51e97-205\">[Varsa ve else deyimi](../language-reference/keywords/if-else.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-205\">[If and else statement](../language-reference/keywords/if-else.md) </span></span>  \n<span data-ttu-id=\"51e97-206\">[While deyimi](../language-reference/keywords/while.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-206\">[While statement](../language-reference/keywords/while.md) </span></span>  \n<span data-ttu-id=\"51e97-207\">[Do deyimi](../language-reference/keywords/do.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-207\">[Do statement](../language-reference/keywords/do.md) </span></span>  \n[<span data-ttu-id=\"51e97-208\">For deyimi</span><span class=\"sxs-lookup\"><span data-stu-id=\"51e97-208\">For statement</span></span>](../language-reference/keywords/for.md)"
