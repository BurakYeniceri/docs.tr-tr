### YamlMime:Tutorial
title: <span data-ttu-id="3618a-101">C# dilinde sayılar</span><span class="sxs-lookup"><span data-stu-id="3618a-101">Numbers in C#</span></span>
metadata:
  title: C# etkileşimli öğretici - C# hızlı başlangıçları numaraları
  description: Sayısal türlerle ilgili bu hızlı başlangıçta, C# etkileşimli bir şekilde öğrenmek için tarayıcınızı kullanacaksınız. C# kodu yazacak ve kodunuzu doğrudan tarayıcınızda çalıştırma ve derleme sonuçlarını görmek için dağıtacağız.
  audience: Developer
  ms.topic: quickstart
  ms.custom: mvc
  ms.date: 08/24/2018
  level: Beginner
  nextTutorialHref: branches-and-loops.yml
  nextTutorialTitle: <span data-ttu-id="3618a-105">C# dilinde dallar ve döngüler</span><span class="sxs-lookup"><span data-stu-id="3618a-105">Branches and loops in C#</span></span>
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: 473d0619ad9a68e9d5aea0cf5fa9daf092f623f5
  ms.sourcegitcommit: 2eceb05f1a5bb261291a1f6a91c5153727ac1c19
  ms.translationtype: MT
  ms.contentlocale: tr-TR
  ms.lasthandoff: 09/04/2018
  ms.locfileid: "43507862"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="3618a-106">Bu hızlı başlangıç size C# dilinde sayı türlerinden hakkında etkileşimli olarak C# yazmak ve kodunuzu derlerken ve sonuçları görmek için tarayıcınızı kullanmayı öğretir.</span><span class="sxs-lookup"><span data-stu-id="3618a-106">This quick start teaches you about the number types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="3618a-107">Bu, bir dizi ve C# matematik işlemlerini inceleyen ders içerir.</span><span class="sxs-lookup"><span data-stu-id="3618a-107">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id="3618a-108">Bu dersler size C# dilinin temellerini öğretin.</span><span class="sxs-lookup"><span data-stu-id="3618a-108">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="3618a-109">Tamsayı matematiğini İnceleme</span><span class="sxs-lookup"><span data-stu-id="3618a-109">Explore integer math</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"3618a-110\">Etkileşimli pencerede aşağıdaki kodu çalıştırın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"3618a-111\">Bunu yapmak için aşağıdaki kod bloğunu etkileşimli pencereye yazın ve **çalıştırma** düğmesi:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-111\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 18;\nint b = 6;\nint c = a + b;\nConsole.WriteLine(c);\n```\n\n<span data-ttu-id=\"3618a-112\">Az önce tamsayılarla gerçekleştirilen temel matematik işlemlerinden birini gördünüz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-112\">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id=\"3618a-113\">`int` Türü temsil eder bir **tamsayı**, bir pozitif veya negatif tamsayı.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-113\">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id=\"3618a-114\">Kullandığınız `+` sembol ekleme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-114\">You use the `+` symbol for addition.</span></span> <span data-ttu-id=\"3618a-115\">Tamsayılar için kullanılan diğer matematiksel işlemler şunlardır:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-115\">Other common mathematical operations for integers include:</span></span>\n\n- <span data-ttu-id=\"3618a-116\">`-` çıkarma için</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-116\">`-` for subtraction</span></span>\n- <span data-ttu-id=\"3618a-117\">`*` çarpma için</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-117\">`*` for multiplication</span></span>\n- <span data-ttu-id=\"3618a-118\">`/` bölme için</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-118\">`/` for division</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"3618a-119\">Bu hızlı başlangıç boyunca kendi etkileşimli pencerede yazdığınız kodu değiştirerek keşfedebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-119\">Throughout this quick start, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id=\"3618a-120\">Bu hızlı başlangıç her adımda deneyebileceğiniz örnekler sunar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-120\">This quick start provides examples that you can try at each step.</span></span>\n\n<span data-ttu-id=\"3618a-121\">Bu farklı işlemleri keşfederek başlayın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-121\">Start by exploring those different operations.</span></span> <span data-ttu-id=\"3618a-122\">Bu işlemlerden her biriyle denemek için üçüncü satırı değiştirin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-122\">Modify the third line to try each of these operations.</span></span> <span data-ttu-id=\"3618a-123\">Her düzenlemeden sonra tıklayın **çalıştırma** düğmesi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-123\">After each edit, click the **Run** button.</span></span>\n\n<span data-ttu-id=\"3618a-124\">Çıkarma:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-124\">Subtraction:</span></span>\n\n```csharp\nint c = a - b;\n```\n\n<span data-ttu-id=\"3618a-125\">Çarpma:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-125\">Multiplication:</span></span>\n\n```csharp\nint c = a * b;\n```\n\n<span data-ttu-id=\"3618a-126\">Bölme:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-126\">Division:</span></span> \n\n```csharp\nint c = a / b;\n```\n\n<span data-ttu-id=\"3618a-127\">Dilerseniz aynı satırda birden çok matematik işlemi gerçekleştirerek de deneyebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-127\">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"3618a-128\">C# (veya herhangi bir programlama dilini) keşfederken, kod yazdığınızda hatalar yapacaksınız.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"3618a-129\">**Derleyici** bu hataları bulup size bildirir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"3618a-130\">Çıktı, hata iletileri içerdiğinde, örnek kod ve neyin düzeltilmesi gerektiğini görmek için etkileşimli pencerede kodu yakından bakın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"3618a-131\">Bu alıştırma, C# kodunun yapısını öğrenmenize yardımcı olur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-131\">That exercise will help you learn the structure of C# code.</span></span>     \n\n> [!NOTE]\n> <span data-ttu-id=\"3618a-132\">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-132\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"3618a-133\">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-133\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="3618a-134">İşlem sırasını İnceleme</span><span class="sxs-lookup"><span data-stu-id="3618a-134">Explore order of operations</span></span>
  durationInMinutes: 7
  content: >
    <span data-ttu-id="3618a-135">C# dil kuralları Matematikte öğrendiğiniz kurallarla tutarlı farklı matematik işlemlerinin önceliğini tanımlar.</span><span class="sxs-lookup"><span data-stu-id="3618a-135">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>

    <span data-ttu-id="3618a-136">Çarpma ve bölme, toplama ve çıkarma öncelik kazanır.</span><span class="sxs-lookup"><span data-stu-id="3618a-136">Multiplication and division take precedence over addition and subtraction.</span></span>

    <span data-ttu-id="3618a-137">Bu, etkileşimli pencerede aşağıdaki kodu çalıştırarak keşfedin:</span><span class="sxs-lookup"><span data-stu-id="3618a-137">Explore that by running the following code in the interactive window:</span></span>


    ```csharp

    int a = 5;

    int b = 4;

    int c = 2;

    int d = a + b * c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="3618a-138">Çıkış, çarpma işleminin toplama işleminden önce gerçekleştiğini gösterir.</span><span class="sxs-lookup"><span data-stu-id="3618a-138">The output demonstrates that the multiplication is performed before the addition.</span></span>


    <span data-ttu-id="3618a-139">İşlemi parantez içine ekleyerek farklı bir işlem sırasını zorlayabilir veya önce gerçekleştirilen işlemler, istediğiniz:</span><span class="sxs-lookup"><span data-stu-id="3618a-139">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>


    ```csharp

    int a = 5;

    int b = 4;

    int c = 2;

    int d = (a  + b) * c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="3618a-140">Birçok farklı işlemi birleştirerek daha fazlasını keşfedin.</span><span class="sxs-lookup"><span data-stu-id="3618a-140">Explore more by combining many different operations.</span></span> <span data-ttu-id="3618a-141">Yukarıdaki dördüncü satırı şunun gibi değiştirin:</span><span class="sxs-lookup"><span data-stu-id="3618a-141">Replace the fourth line above with something like this:</span></span>


    ```csharp

    int d = (a + b) - 6 * c + (12 * 4) / 3 + 12;

    ```


    <span data-ttu-id="3618a-142">Tamsayılar için ilgi çekici bir davranışı fark etmiş olabilirsiniz.</span><span class="sxs-lookup"><span data-stu-id="3618a-142">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id="3618a-143">Sonucun ondalık veya kesir bölümü içermesini bile beklediğiniz, Tamsayı bölme her zaman tamsayı sonucu üretir.</span><span class="sxs-lookup"><span data-stu-id="3618a-143">Integer division always produces an integer result, even when you'd expect the result to include a decimal or fractional portion.</span></span>


    <span data-ttu-id="3618a-144">Bu davranışı görmediyseniz şunları deneyin:</span><span class="sxs-lookup"><span data-stu-id="3618a-144">If you haven't seen this behavior, try the following:</span></span>


    ```csharp

    int a = 7;

    int b = 4;

    int c = 3;

    int d = (a  + b) / c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="3618a-145">Tıklayın **çalıştırma** yeniden sonuçları görmek için.</span><span class="sxs-lookup"><span data-stu-id="3618a-145">Click **Run** again to see the results.</span></span>


    > [!NOTE]

    > <span data-ttu-id="3618a-146">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="3618a-146">This online coding experience is in preview mode.</span></span> <span data-ttu-id="3618a-147">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="3618a-147">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="3618a-148">Tamsayı duyarlığını ve sınırlarını İnceleme</span><span class="sxs-lookup"><span data-stu-id="3618a-148">Explore integer precision and limits</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="3618a-149">Son örnek, Tamsayı bölme sonucu kestiğini size göstermiştir.</span><span class="sxs-lookup"><span data-stu-id="3618a-149">That last sample showed you that integer division truncates the result.</span></span>

    <span data-ttu-id="3618a-150">Alabileceğiniz **kalan** kullanarak **modül** işleci `%` karakter:</span><span class="sxs-lookup"><span data-stu-id="3618a-150">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>


    ```csharp

    int a = 7;

    int b = 4;

    int c = 3;

    int d = (a  + b) / c;

    int e = (a + b) % c;

    Console.WriteLine($"quotient: {d}");

    Console.WriteLine($"remainder: {e}");

    ```


    <span data-ttu-id="3618a-151">C# tamsayı türü diğer bir özelliğiyle matematiksel tamsayılardan farklıdır: `int` türünün alt ve üst sınırları vardır.</span><span class="sxs-lookup"><span data-stu-id="3618a-151">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id="3618a-152">Bu sınırları görmek için etkileşimli pencerede şu kodu çalıştırın:</span><span class="sxs-lookup"><span data-stu-id="3618a-152">Run this code in the interactive window to see those limits:</span></span>


    ```csharp

    int max = int.MaxValue;

    int min = int.MinValue;

    Console.WriteLine($"The range of integers is {min} to {max}");

    ```


    <span data-ttu-id="3618a-153">Bir hesaplama, bu sınırları aşan bir değer veriyorsa, sahip olduğunuz bir **underflow** veya **taşma** koşul.</span><span class="sxs-lookup"><span data-stu-id="3618a-153">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id="3618a-154">Yanıtın bir sınırdan diğerine kaydığı görünür.</span><span class="sxs-lookup"><span data-stu-id="3618a-154">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id="3618a-155">Şu iki satırı bir örnek görmek için etkileşimli pencereye ekleyin:</span><span class="sxs-lookup"><span data-stu-id="3618a-155">Add these two lines to the interactive window to see an example:</span></span>


    ```csharp

    int what = max + 3;

    Console.WriteLine($"An example of overflow: {what}");

    ```


    <span data-ttu-id="3618a-156">Yanıt çok az (negatif) tamsayı yakın olduğuna dikkat edin.</span><span class="sxs-lookup"><span data-stu-id="3618a-156">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id="3618a-157">Aynı olan `min + 2`.</span><span class="sxs-lookup"><span data-stu-id="3618a-157">It's the same as `min + 2`.</span></span> <span data-ttu-id="3618a-158">Toplama işlemi **taştı** tamsayılar için izin verilen değerler.</span><span class="sxs-lookup"><span data-stu-id="3618a-158">The addition operation **overflowed** the allowed values for integers.</span></span>

    <span data-ttu-id="3618a-159">Taşma "etrafında en büyük olası tamsayı değerinden en küçük kaydırıldığı" yanıt oldukça büyük negatif bir sayı olmasıdır.</span><span class="sxs-lookup"><span data-stu-id="3618a-159">The answer is a very large negative number because an overflow "wraps around" from the largest possible integer value to the smallest.</span></span>


    <span data-ttu-id="3618a-160">Farklı sınırlar ve ne zaman kullanacağınız duyarlık içeren başka sayısal türler vardır `int` türü, gereksinimlerinizi karşılamadığında.</span><span class="sxs-lookup"><span data-stu-id="3618a-160">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id="3618a-161">Bir sonraki adımda bunları inceleyelim.</span><span class="sxs-lookup"><span data-stu-id="3618a-161">Let's explore those next.</span></span>


    > [!NOTE]

    > <span data-ttu-id="3618a-162">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="3618a-162">This online coding experience is in preview mode.</span></span> <span data-ttu-id="3618a-163">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="3618a-163">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="3618a-164">Çift tür ile çalışma</span><span class="sxs-lookup"><span data-stu-id="3618a-164">Work with the double type</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"3618a-165\">`double` Sayısal türü temsil eder, çift duyarlıklı kayan nokta sayısı.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-165\">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id=\"3618a-166\">Bu terimler sizin için yeni olabilir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-166\">Those terms may be new to you.</span></span> <span data-ttu-id=\"3618a-167\">A **kayan nokta** numarası, çok büyük ya da büyüklük açısından küçük olabilen, tamsayı olmayan değerleri temsil etmek kullanışlıdır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-167\">A **floating point** number is useful to represent non-integral numbers that may be very large or small in magnitude.</span></span> <span data-ttu-id=\"3618a-168\">**Çift duyarlıklı** bu numaraları daha fazla duyarlık kullanılarak depolandığı anlamına gelir **tek duyarlıklı**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-168\">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id=\"3618a-169\">Modern bilgisayarlarda çift duyarlıklı tek duyarlıklı sayılara kullanmak daha yaygındır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-169\">On modern computers, it is more common to use double precision than single precision numbers.</span></span>\n<span data-ttu-id=\"3618a-170\">Haydi keşfedelim.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-170\">Let's explore.</span></span> <span data-ttu-id=\"3618a-171\">Etkileşimli pencerede aşağıdaki kodu deneyin ve sonuca bakın:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-171\">Try the following code in the interactive window and see the result:</span></span>\n\n```csharp\ndouble a = 5;\ndouble b = 4;\ndouble c = 2;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"3618a-172\">Yanıt sayının ondalık kısmını içerdiğine dikkat edin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-172\">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id=\"3618a-173\">Çift değerlerle biraz daha karmaşık bir ifadeyi deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-173\">Try a slightly more complicated expression with doubles:</span></span>\n\n```csharp\ndouble a = 19;\ndouble b = 23;\ndouble c = 8;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"3618a-174\">Çift değerin aralığı, tamsayı değerlerinden çok büyük.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-174\">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id=\"3618a-175\">Etkileşimli pencerede aşağıdaki kodu deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-175\">Try the following code in the interactive window:</span></span>\n\n```csharp\ndouble max = double.MaxValue;\ndouble min = double.MinValue;\nConsole.WriteLine($\"The range of double is {min} to {max}\");\n```\n\n<span data-ttu-id=\"3618a-176\">Bu değerler bilimsel gösterimde yazdırılır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-176\">These values are printed out in scientific notation.</span></span> <span data-ttu-id=\"3618a-177\">Sol tarafındaki sayı `E` katsayıdır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-177\">The number to the left of the `E` is the significand.</span></span> <span data-ttu-id=\"3618a-178\">Sağ taraftaki sayı, 10 'un bir kuvveti üstür.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-178\">The number to the right is the exponent, as a power of 10.</span></span> \n\n<span data-ttu-id=\"3618a-179\">Yalnızca ondalık sayılar gibi C# double yuvarlama hataları olabilir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-179\">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id=\"3618a-180\">Bu kodu deneyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-180\">Try this code:</span></span>\n\n```csharp\ndouble third = 1.0 / 3.0;\nConsole.WriteLine(third);\n```\n\n<span data-ttu-id=\"3618a-181\">Bildiğiniz `0.3` yinelenen tam olarak aynı olup `1/3`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-181\">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>\n\n<span data-ttu-id=\"3618a-182\">***Sınama***</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-182\">***Challenge***</span></span>\n\n<span data-ttu-id=\"3618a-183\">Büyük sayılar, küçük sayılar, çarpma ve bölme kullanarak ile diğer hesaplamaları deneyin `double` türü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-183\">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id=\"3618a-184\">Daha karmaşık hesaplamalar deneyin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-184\">Try more complicated calculations.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"3618a-185\">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-185\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"3618a-186\">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-186\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="3618a-187">Sabit nokta türleriyle çalışma</span><span class="sxs-lookup"><span data-stu-id="3618a-187">Work with fixed point types</span></span>
  durationInMinutes: 8
  content: "<span data-ttu-id=\"3618a-188\">C# dilinde temel sayısal türleri gördünüz: tamsayılar ve çiftler.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-188\">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id=\"3618a-189\">Bilgi edinmek için bir türü vardır: `decimal` türü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-189\">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id=\"3618a-190\">`decimal` Türünde daha küçük bir aralığa ancak daha fazla duyarlığa `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-190\">The `decimal` type has a smaller range but greater precision than `double`.</span></span> <span data-ttu-id=\"3618a-191\">Terim **sabit nokta** Ondalık ayırıcının (veya ikili noktasının) hareket etmediği anlamına gelir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-191\">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id=\"3618a-192\">Bir göz atalım:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-192\">Let's take a look:</span></span>\n\n```csharp\ndecimal min = decimal.MinValue;\ndecimal max = decimal.MaxValue;\nConsole.WriteLine($\"The range of the decimal type is {min} to {max}\");\n```\n\n<span data-ttu-id=\"3618a-193\">Aralık değerinden küçük olduğunu fark `double` türü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-193\">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id=\"3618a-194\">Aşağıdaki kodu deneyerek ondalık türünde daha fazla duyarlık görebilirsiniz:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-194\">You can see the greater precision with the decimal type by trying the following code:</span></span>\n\n```csharp\ndouble a = 1.0;\ndouble b = 3.0;\nConsole.WriteLine(a / b);\n\ndecimal c = 1.0M;\ndecimal d = 3.0M;\nConsole.WriteLine(c / d);\n```\n\n<span data-ttu-id=\"3618a-195\">`M` Numaralarda sonekidir nasıl bir sabit kullanması gerektiğini belirten `decimal` türü.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-195\">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>\n\n<span data-ttu-id=\"3618a-196\">Ondalık türünün kullanıldığı Matematikte, ondalık noktanın sağındaki daha fazla rakam olduğuna dikkat edin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-196\">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> \n\n<span data-ttu-id=\"3618a-197\">***Sınama***</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-197\">***Challenge***</span></span>\n\n<span data-ttu-id=\"3618a-198\">Farklı sayısal türleri gördüğünüze göre çapı 2,50 santimetre olan bir dairenin alanını hesaplayan kodu yazın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-198\">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 centimeters.</span></span> <span data-ttu-id=\"3618a-199\">Unutmayın PI sayısı ile çarpılan bir dairenin alanının kare RADIUS olduğunu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-199\">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id=\"3618a-200\">İpucu: .NET, PI sayısı için bir sabit içeriyor <xref:System.Math.PI?displayProperty=nameWithType> , bu değer için kullanabilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-200\">One hint: .NET contains a constant for PI, <xref:System.Math.PI?displayProperty=nameWithType> that you can use for that value.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"3618a-201\">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-201\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"3618a-202\">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-202\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n\n<span data-ttu-id=\"3618a-203\">19 ile 20 arasında bir yanıt almanız gerekir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-203\">You should get an answer between 19 and 20.</span></span>\n"
- title: <span data-ttu-id="3618a-204">Görevi tamamlama</span><span class="sxs-lookup"><span data-stu-id="3618a-204">Complete challenge</span></span>
  durationInMinutes: 1
  content: >
    <span data-ttu-id="3618a-205">Bu gibi bir şeyle gündeme mı?</span><span class="sxs-lookup"><span data-stu-id="3618a-205">Did you come up with something like this?</span></span>


    ```csharp

    double radius = 2.50;

    double area = Math.PI * radius * radius;

    Console.WriteLine(area);

    ```


    <span data-ttu-id="3618a-206">Dilerseniz diğer formüllerden deneyin.</span><span class="sxs-lookup"><span data-stu-id="3618a-206">Try some other formulas if you'd like.</span></span>


    > [!NOTE]

    > <span data-ttu-id="3618a-207">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="3618a-207">This online coding experience is in preview mode.</span></span> <span data-ttu-id="3618a-208">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="3618a-208">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: "<span data-ttu-id=\"3618a-209\">\"C# dilinde sayılar\" hızlı başlangıcını tamamladınız.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-209\">You've completed the \"Numbers in C#\" quick start.</span></span> \n\n<span data-ttu-id=\"3618a-210\">Bu hızlı başlangıçlara kendi geliştirme ortamınızda devam edebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-210\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"3618a-211\">Temel bilgileri öğrenmek [yerel geliştirme](local-environment.md) ve ardından bir Hızlı Başlangıç'ı seçin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-211\">Learn the basics of [local development](local-environment.md) and then pick a quick start.</span></span> <span data-ttu-id=\"3618a-212\">Alıştırmanın aynısını deneyebilir, doğrudan bir sonraki hızlı başlangıca geçebilir veya başlangıcıyla tekrar [C# dilinde sayılar](numbers-in-csharp-local.md) hızlı başlangıç.</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-212\">You can try this same exercise, move directly to the next quick start, or start again at with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"3618a-213\">Aşağıdaki konularda C# dilinde sayılar hakkında daha fazla bilgi edinebilirsiniz:</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-213\">You can learn more about numbers in C# in the following topics:</span></span>\n\n<span data-ttu-id=\"3618a-214\">[Tam sayı türleri tablosu](../language-reference/keywords/integral-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-214\">[Integral Types Table](../language-reference/keywords/integral-types-table.md) </span></span>  \n<span data-ttu-id=\"3618a-215\">[Kayan nokta türleri tablosu](../language-reference/keywords/floating-point-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-215\">[Floating-Point Types Table](../language-reference/keywords/floating-point-types-table.md) </span></span>  \n<span data-ttu-id=\"3618a-216\">[Yerleşik türler tablosu](../language-reference/keywords/built-in-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-216\">[Built-In Types Table](../language-reference/keywords/built-in-types-table.md) </span></span>  \n<span data-ttu-id=\"3618a-217\">[Örtük sayısal dönüşümler tablosu](../language-reference/keywords/implicit-numeric-conversions-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-217\">[Implicit Numeric Conversions Table](../language-reference/keywords/implicit-numeric-conversions-table.md) </span></span>  \n[<span data-ttu-id=\"3618a-218\">Açık Sayısal Dönüştürmeler Tablosu</span><span class=\"sxs-lookup\"><span data-stu-id=\"3618a-218\">Explicit Numeric Conversions Table</span></span>](../language-reference/keywords/explicit-numeric-conversions-table.md)"
