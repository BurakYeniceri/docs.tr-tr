### YamlMime:Tutorial
title: <span data-ttu-id="689b6-101">C# koleksiyonları</span><span class="sxs-lookup"><span data-stu-id="689b6-101">Collections in C#</span></span>
metadata:
  title: Koleksiyonları etkileşimli öğreticisini - C# quickstarts
  description: Bu öğreticide, C# etkileşimli olarak öğrenmek için tarayıcınızın kullanacaksınız. C# kod yazma ve derleme ve kodunuzu doğrudan tarayıcıda çalıştırma sonuçları görüntüleyin.
  audience: Developer
  ms.topic: quickstart
  ms.custom: mvc
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: 79861f7a04939fafd77bd7a905b8fef0e94b8966
  ms.sourcegitcommit: 15109844229ade1c6449f48f3834db1b26907824
  ms.translationtype: MT
  ms.contentlocale: tr-TR
  ms.lasthandoff: 05/07/2018
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="689b6-105">Bu hızlı başlangıç C# etkileşimli olarak C# kod yazmak ve derleme ve kodunuzu çalıştırmaya sonuçlarını görmek için tarayıcınızı kullanarak öğretilmektedir.</span><span class="sxs-lookup"><span data-stu-id="689b6-105">This quickstart teaches you C# interactively, using your browser to write C# code and see the results of compiling and running your code.</span></span> <span data-ttu-id="689b6-106">Bir dizi oluşturmak, değiştirmek ve Koleksiyonlar ve diziler keşfedin dersleri içerir.</span><span class="sxs-lookup"><span data-stu-id="689b6-106">It contains a series of lessons that create, modify and explore collections and arrays.</span></span>
- title: <span data-ttu-id="689b6-107">Listeleri oluşturma</span><span class="sxs-lookup"><span data-stu-id="689b6-107">Create lists</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="689b6-108">Aşağıdaki kod etkileşimli penceresinde çalıştırın.</span><span class="sxs-lookup"><span data-stu-id="689b6-108">Run the following code in the interactive window.</span></span> <span data-ttu-id="689b6-109">Bunu yapmak için aşağıdaki kod bloğu etkileşimli penceresinde yazın (Değiştir "<name>" adıyla) tıklatıp **çalıştırmak** düğmesi:</span><span class="sxs-lookup"><span data-stu-id="689b6-109">To do that, type the following code block in the interactive window (replace "<name>" with your name) and click the **Run** button:</span></span>


    ```csharp

    var names = new List<string> { "<name>", "Ana", "Felipe" };

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="689b6-110">Yalnızca dizelerinin listesini oluşturduğunuz, üç adları bu listeye eklenen ve tümü büyük harf adlarında çıkışı yazdırılmıştır.</span><span class="sxs-lookup"><span data-stu-id="689b6-110">You've just created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id="689b6-111">Listede ilerleyin döngü önceki quickstarts içinde öğrendiğinize kavramları kullanıyorsunuz.</span><span class="sxs-lookup"><span data-stu-id="689b6-111">You're using concepts that you've learned in earlier quickstarts to loop through the list.</span></span>


    <span data-ttu-id="689b6-112">Adlarını görüntülemek için kod kullanır [dize ilişkilendirme](../language-reference/tokens/interpolated.md) özelliği.</span><span class="sxs-lookup"><span data-stu-id="689b6-112">The code to display names makes use of the [string interpolation](../language-reference/tokens/interpolated.md) feature.</span></span> <span data-ttu-id="689b6-113">Öncesinde ne zaman bir `string` ile `$` karakter dizesi bildiriminde C# kodu katıştırmak.</span><span class="sxs-lookup"><span data-stu-id="689b6-113">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id="689b6-114">Gerçek dize, C# kodu ürettiği değeri ile değiştirir.</span><span class="sxs-lookup"><span data-stu-id="689b6-114">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id="689b6-115">Bu örnekte, yerini `{name.ToUpper()}` aradığınız çünkü her adıyla dönüştürülen büyük harfler için <xref:System.String.ToUpper%2A> yöntemi.</span><span class="sxs-lookup"><span data-stu-id="689b6-115">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A> method.</span></span>


    <span data-ttu-id="689b6-116">Şimdi keşfetme tutun.</span><span class="sxs-lookup"><span data-stu-id="689b6-116">Let's keep exploring.</span></span>


    > [!NOTE]

    > <span data-ttu-id="689b6-117">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class="sxs-lookup"><span data-stu-id="689b6-117">This online coding experience is in preview mode.</span></span> <span data-ttu-id="689b6-118">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="689b6-118">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="689b6-119">Liste içeriklerini değiştirme</span><span class="sxs-lookup"><span data-stu-id="689b6-119">Modify list contents</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="689b6-120">Kullandığı oluşturduğunuz koleksiyonda <xref:System.Collections.Generic.List%601> türü.</span><span class="sxs-lookup"><span data-stu-id="689b6-120">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id="689b6-121">Bu tür, öğelerin sıralarının depolar.</span><span class="sxs-lookup"><span data-stu-id="689b6-121">This type stores sequences of elements.</span></span> <span data-ttu-id="689b6-122">Açılı ayraçları arasında öğelerin türü belirtin.</span><span class="sxs-lookup"><span data-stu-id="689b6-122">You specify the type of the elements between the angle brackets.</span></span>


    <span data-ttu-id="689b6-123">Bu önemli bir özelliği <xref:System.Collections.Generic.List%601> türüdür onu büyütür veya böylelikle küçültür, ekleme veya öğeleri kaldırma olanak sağlar.</span><span class="sxs-lookup"><span data-stu-id="689b6-123">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id="689b6-124">Zaten yazdığınız kodun altına aşağıdaki kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="689b6-124">Add the following code below the code you've already written:</span></span>


    ```csharp

    Console.WriteLine();

    names.Add("Maria");

    names.Add("Bill");

    names.Remove("Ana");

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="689b6-125">İki daha fazla ad listesinin sonuna ekledik.</span><span class="sxs-lookup"><span data-stu-id="689b6-125">You've added two more names to the end of the list.</span></span> <span data-ttu-id="689b6-126">Ayrıca bir de kaldırdınız.</span><span class="sxs-lookup"><span data-stu-id="689b6-126">You've also removed one as well.</span></span>


    <span data-ttu-id="689b6-127"><xref:System.Collections.Generic.List%601> Tarafından ayrı öğeleri başvuru sağlar **dizin** de.</span><span class="sxs-lookup"><span data-stu-id="689b6-127">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id="689b6-128">Öğelerini kullanarak erişim `[` ve `]` belirteçleri.</span><span class="sxs-lookup"><span data-stu-id="689b6-128">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id="689b6-129">Neleri zaten yazdıktan ve deneyin altına aşağıdaki kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="689b6-129">Add the following code below what you've already written and try it:</span></span>


    ```csharp

    Console.WriteLine($"My name is {names[0]}.");

    Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");

    ```


    <span data-ttu-id="689b6-130">Listenin sonunun erişim izin verilmez.</span><span class="sxs-lookup"><span data-stu-id="689b6-130">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id="689b6-131">Ne kadar süreyle listeyi kullanarak denetleyebilirsiniz <xref:System.Collections.Generic.List%601.Count%2A> özelliği.</span><span class="sxs-lookup"><span data-stu-id="689b6-131">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id="689b6-132">Denemek için aşağıdaki kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="689b6-132">Add the following code to try it:</span></span>


    ```csharp

    Console.WriteLine($"The list has {names.Count} people in it");

    ```


    <span data-ttu-id="689b6-133">Tıklatın **çalıştırmak** yeniden sonuçları görüntüleyin.</span><span class="sxs-lookup"><span data-stu-id="689b6-133">Click **Run** again to see the results.</span></span> <span data-ttu-id="689b6-134">Bu nedenle en büyük geçerli dizin biridir C# ' ta dizinlerini 0'da, Başlat listedeki öğeleri sayısından küçük.</span><span class="sxs-lookup"><span data-stu-id="689b6-134">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="689b6-135">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class="sxs-lookup"><span data-stu-id="689b6-135">This online coding experience is in preview mode.</span></span> <span data-ttu-id="689b6-136">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="689b6-136">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="689b6-137">Arama ve sıralama listeler</span><span class="sxs-lookup"><span data-stu-id="689b6-137">Search and sort lists</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="689b6-138">Bizim örneklerimizi görece küçük listeleri kullanın, ancak uygulamalarınızı genellikle bazen binlerce numaralandırma pek çok daha fazla öğe ile listeleri oluşturabilirsiniz.</span><span class="sxs-lookup"><span data-stu-id="689b6-138">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id="689b6-139">Bu büyük koleksiyonlarda öğeleri bulmak için farklı öğeleri listede arama gerekir.</span><span class="sxs-lookup"><span data-stu-id="689b6-139">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id="689b6-140"><xref:System.Collections.Generic.List%601.IndexOf%2A> Yöntemi için bir öğe arar ve öğenin dizinini döndürür.</span><span class="sxs-lookup"><span data-stu-id="689b6-140">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id="689b6-141">Bunu nasıl çalıştığını görmek için deneyin.</span><span class="sxs-lookup"><span data-stu-id="689b6-141">Try this to see how it works.</span></span>  <span data-ttu-id="689b6-142">Şu ana kadar yazdıklarınızı altına aşağıdaki kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="689b6-142">Add the following code below what you've written so far:</span></span>


    ```csharp

    var index = names.IndexOf("Felipe");

    if (index != -1)
      Console.WriteLine($"The name {names[index]} is at index {index}");

    var notFound = names.IndexOf("Not Found");
      Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
    ```


    <span data-ttu-id="689b6-143">Her zaman tarafından döndürülen dizin denetlemeniz gerekir böylece öğeyi listede olup olmadığını bilemeyebilirsiniz <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="689b6-143">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id="689b6-144">-1 olması durumunda öğe bulunamadı.</span><span class="sxs-lookup"><span data-stu-id="689b6-144">If it is -1, the item was not found.</span></span>


    <span data-ttu-id="689b6-145">Listenizdeki öğeleri de sıralanabilir.</span><span class="sxs-lookup"><span data-stu-id="689b6-145">The items in your list can be sorted as well.</span></span> <span data-ttu-id="689b6-146"><xref:System.Collections.Generic.List%601.Sort%2A> Yöntemi (alfabetik olarak söz konusu olduğunda dizeleri) normal sıralarına listesindeki tüm öğeleri sıralar.</span><span class="sxs-lookup"><span data-stu-id="689b6-146">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id="689b6-147">Bu kodu ekleyin ve yeniden çalıştırın:</span><span class="sxs-lookup"><span data-stu-id="689b6-147">Add this code and run again:</span></span>


    ```csharp

    names.Sort();

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    > [!NOTE]

    > <span data-ttu-id="689b6-148">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class="sxs-lookup"><span data-stu-id="689b6-148">This online coding experience is in preview mode.</span></span> <span data-ttu-id="689b6-149">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="689b6-149">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="689b6-150">Diğer türleri listesi</span><span class="sxs-lookup"><span data-stu-id="689b6-150">Lists of other types</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="689b6-151">Kullanmakta olduğunuz `string` kadarki listelerindeki türü.</span><span class="sxs-lookup"><span data-stu-id="689b6-151">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id="689b6-152">Olalım bir <xref:System.Collections.Generic.List%601> farklı türü kullanıyor.</span><span class="sxs-lookup"><span data-stu-id="689b6-152">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id="689b6-153">Şimdi bir sayı kümesi oluşturun.</span><span class="sxs-lookup"><span data-stu-id="689b6-153">Let's build a set of numbers.</span></span> <span data-ttu-id="689b6-154">Şu ana kadar yazdığınız kodun silin ve bu ile değiştirin:</span><span class="sxs-lookup"><span data-stu-id="689b6-154">Delete the code you wrote so far, and replace it with this:</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};

    ```


    <span data-ttu-id="689b6-155">Tamsayı listesi oluşturur ve ilk iki tamsayı 1 değerine ayarlar.</span><span class="sxs-lookup"><span data-stu-id="689b6-155">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id="689b6-156">İlk iki değerlerini bunlar bir *Fibonacci dizisi*, sayılardan oluşan bir dizi.</span><span class="sxs-lookup"><span data-stu-id="689b6-156">These are the first two values of a *Fibonacci Sequence*, a sequence of numbers.</span></span> <span data-ttu-id="689b6-157">Sonraki her Fibonacci numarası, önceki iki sayı toplamı gerçekleştirerek bulunur.</span><span class="sxs-lookup"><span data-stu-id="689b6-157">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id="689b6-158">Bu kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="689b6-158">Add this code:</span></span>


    ```csharp

    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];

    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];


    fibonacciNumbers.Add(previous + previous2);


    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="689b6-159">Tuşuna **çalıştırmak** ; sonuçları görmek için</span><span class="sxs-lookup"><span data-stu-id="689b6-159">Press **Run** to see the results;</span></span>


    > [!NOTE]

    > <span data-ttu-id="689b6-160">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class="sxs-lookup"><span data-stu-id="689b6-160">This online coding experience is in preview mode.</span></span> <span data-ttu-id="689b6-161">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="689b6-161">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="689b6-162">sınama</span><span class="sxs-lookup"><span data-stu-id="689b6-162">Challenge</span></span>
  durationInMinutes: 10
  content: >
    <span data-ttu-id="689b6-163">Birlikte koyabilirsiniz varsa bkz bazı kavramlar bu ve önceki sürümleri dersleri.</span><span class="sxs-lookup"><span data-stu-id="689b6-163">See if you can put together some of the concepts from this and earlier lessons.</span></span> <span data-ttu-id="689b6-164">Ne kadar Fibonacci numaralarıyla derlediğiniz genişletin.</span><span class="sxs-lookup"><span data-stu-id="689b6-164">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id="689b6-165">Deneyin ve ilk 20 numaralarını sırayla oluşturması için kod yazın.</span><span class="sxs-lookup"><span data-stu-id="689b6-165">Try and write the code to generate the first 20 numbers in the sequence.</span></span> <span data-ttu-id="689b6-166">(Bir ipucu olarak 20 Fibonacci 6765 numarasıdır.)</span><span class="sxs-lookup"><span data-stu-id="689b6-166">(As a hint, the 20th Fibonacci number is 6765.)</span></span>


    > [!NOTE]

    > <span data-ttu-id="689b6-167">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class="sxs-lookup"><span data-stu-id="689b6-167">This online coding experience is in preview mode.</span></span> <span data-ttu-id="689b6-168">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="689b6-168">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="689b6-169">Tam sınama</span><span class="sxs-lookup"><span data-stu-id="689b6-169">Complete challenge</span></span>
  durationInMinutes: 3
  content: "<span data-ttu-id=\"689b6-170\">Aşağıdakine benzer ile gündeme?</span><span class=\"sxs-lookup\"><span data-stu-id=\"689b6-170\">Did you come up with something like this?</span></span>\n\n```csharp\nvar fibonacciNumbers = new List<int> {1, 1};\n\nwhile (fibonacciNumbers.Count < 20)\n{\n    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];\n    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];\n    \n    fibonacciNumbers.Add(previous + previous2);\n}\nforeach(var item in fibonacciNumbers)\n    Console.WriteLine(item);\n```\n\n<span data-ttu-id=\"689b6-171\">Her döngü tekrarında ile son iki tamsayı listesinde, bunları birleşimi ve bu değer listesine ekleyerek yönlendiriyoruz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"689b6-171\">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id=\"689b6-172\">Listeye 20 öğeleri ekleyene kadar döngü tekrarlar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"689b6-172\">The loop repeats until you've added 20 items to the list.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"689b6-173\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"689b6-173\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"689b6-174\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"689b6-174\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: >-
    <span data-ttu-id="689b6-175">Liste Hızlı Başlangıç tamamladınız.</span><span class="sxs-lookup"><span data-stu-id="689b6-175">You've completed the list quickstart.</span></span> <span data-ttu-id="689b6-176">Bu hızlı başlangıç son etkileşimli Hızlı Başlangıç ' dir.</span><span class="sxs-lookup"><span data-stu-id="689b6-176">This quickstart is the final interactive quickstart.</span></span> <span data-ttu-id="689b6-177">Bu hızlı başlangıç ipuçları kendi geliştirme ortamı devam edebilirsiniz.</span><span class="sxs-lookup"><span data-stu-id="689b6-177">You can continue these quickstarts on your own development environment.</span></span> <span data-ttu-id="689b6-178">Temel bilgileri öğrenmek [yerel geliştirme](local-environment.md) ve bir Hızlı Başlangıç'ı seçin.</span><span class="sxs-lookup"><span data-stu-id="689b6-178">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id="689b6-179">Bu aynı alıştırma deneyin, sonraki hızlı başlangıç doğrudan taşımak veya yeniden ile başlangıç [C# numaraları](numbers-in-csharp-local.md) hızlı başlangıç.</span><span class="sxs-lookup"><span data-stu-id="689b6-179">You can try this same exercise, move directly to the next quickstart, or start again at with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>


    <span data-ttu-id="689b6-180">İle çalışma hakkında daha fazla bilgiyi `List` yazın [.NET Kılavuzu](../../standard/index.md) konuyla ilgili [koleksiyonları](../../standard/collections/index.md).</span><span class="sxs-lookup"><span data-stu-id="689b6-180">You can learn more about working with the `List` type in the [.NET Guide](../../standard/index.md) topic on [collections](../../standard/collections/index.md).</span></span> <span data-ttu-id="689b6-181">Ayrıca diğer birçok koleksiyon türleri hakkında bilgi edineceksiniz.</span><span class="sxs-lookup"><span data-stu-id="689b6-181">You'll also learn about many other collection types.</span></span>
