### YamlMime:Tutorial
title: "<span data-ttu-id=\"33ca8-101\">C# Ara değerli dizeler</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-101\">Interpolated strings in C#</span></span>"
metadata:
  title: "Ara değerli dizeler etkileşimli öğreticisini - C# quickstarts"
  description: "Bu öğreticide, C# Ara değerli dize özelliği etkileşimli olarak kullanabilmek için tarayıcınızı kullanacaksınız. C# kod yazma ve derleme ve kodunuzu doğrudan tarayıcıda çalıştırma sonuçları görüntüleyin."
  audience: Developer
  ms.custom: mvc
  ms.topic: get-started-article
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection
  nextTutorialTitle: "<span data-ttu-id=\"33ca8-105\">C# koleksiyonları</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-105\">Collections in C#</span></span>"
  ms.openlocfilehash: 56c7cf5f6ce0c5db27ba43eeaffd9eb2e08f8c8a
  ms.sourcegitcommit: d2da0142247ef42a219a5d2907f153e62dc6ea0d
  ms.translationtype: MT
  ms.contentlocale: tr-TR
  ms.lasthandoff: 02/01/2018
items:
- durationInMinutes: 2
  content: "<span data-ttu-id=\"33ca8-106\">Bu hızlı başlangıç Ara değerli dizeler C# ' ta değerleri tek çıkışına dizeye etkileşimli olarak eklemek için kullanmayı öğretir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-106\">This quickstart teaches you how to use interpolated strings in C# to insert values into a single ouput string interactively.</span></span> <span data-ttu-id=\"33ca8-107\">C# kod yazmak için tarayıcınızı kullanın ve hemen derleme ve kodunuzu çalıştırmaya sonuçlarını görebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-107\">You use your browser to write C# code and can immediately see the results of compiling and running your code.</span></span> <span data-ttu-id=\"33ca8-108\">Hızlı Başlangıç dizeyi birleştirmek, değerleri dizeleri ekleyin ve bu değerler farklı şekillerde biçimi dersleri bir dizi içerir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-108\">The quickstart contains a series of lessons that concatenate strings, insert values into strings, and format those values in different ways.</span></span>\n"
- title: "<span data-ttu-id=\"33ca8-109\">Ara değerli bir dize oluşturma</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-109\">Create an interpolated string</span></span>"
  durationInMinutes: 2
  content: "<span data-ttu-id=\"33ca8-110\">Aşağıdaki kod etkileşimli penceresinde çalıştırın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"33ca8-111\">Bunu yapmak için aşağıdaki kod bloğu etkileşimli penceresinde yazın (Değiştir \"\\<adı >\" adıyla) tıklatıp **çalıştırmak** düğmesi:</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-111\">To do that, type the following code block in the interactive window (replace \"\\<name>\" with your name) and click the **Run** button:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"33ca8-112\">Programını çalıştırdığınızda, tebrik adınızı içeren tek bir dize görüntüler.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-112\">When you run the program, it displays a single string that includes your name in the greeting.</span></span> <span data-ttu-id=\"33ca8-113\">Dahil dize <xref:System.Console.WriteLine%2A> yöntemi çağrısı bir *Ara değerli dize*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-113\">The string included in the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"33ca8-114\">Tek bir dize oluşturmanıza olanak sağlayan şablon türüdür (adlı *neden dize*) bir dizeden katıştırılmış kodu içerir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"33ca8-115\">Ara değerli dizeler değerleri bir dize veya dize (bir araya getirme) birleştirme eklemek için özellikle yararlıdır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) strings.</span></span> \n\n<span data-ttu-id=\"33ca8-116\">Bu basit örnekte, her ara değerli bir dize olmalıdır iki öğeleri içerir:</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-116\">This simple example contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"33ca8-117\">İle başlayan bir değişmez dize değeri `$` açılış tırnak işaretlemeden önce karakter karakter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"33ca8-118\">Arasında herhangi bir boşluk olamaz `$` simge ve tırnak işareti karakteri.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"33ca8-119\">(Görmek isterseniz ne olur bir eklerseniz, bir boşluk sonra `$` karakter etkileşimli pencerede ve tıklayın **çalıştırmak** düğmesi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and click the **Run** button.</span></span> <span data-ttu-id=\"33ca8-120\">C# Derleyici complains, \"Beklenmeyen karakter '$'\".)</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"33ca8-121\">Bir veya daha fazla *Ara değerli ifadeleri*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"33ca8-122\">Ara değerli bir ifadenin bir açma ve kapatma parantezi tarafından belirtilir (`{` ve `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"33ca8-123\">Bir değer döndürür herhangi C# ifade koyabilirsiniz (de dahil olmak üzere `null`) kaşlı ayraçlar içinde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"33ca8-124\">Diğer veri türlerine sahip birkaç fazla ara değerli dize örnek deneyelim.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-124\">Let's try a few more interpolated string examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"33ca8-125\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"33ca8-126\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"33ca8-127\">Farklı veri türlerini içerir</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-127\">Include different data types</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"33ca8-128\">Önceki başlangıcın Ara değerli bir dize içinde başka bir dize eklemek için kullanılır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-128\">In the previous quickstart, you used an interpolated string to insert one string inside of another.</span></span> <span data-ttu-id=\"33ca8-129\">Ara değerli dize ifadesi ancak herhangi bir veri türü olabilir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-129\">An interpolated string expression can be any data type, though.</span></span> <span data-ttu-id=\"33ca8-130\">Birden çok veri türlerinin değerlerine sahip bir ara değerli dize deneyelim.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-130\">Let's try an interpolated string that has values of multiple data types.</span></span> \n\n<span data-ttu-id=\"33ca8-131\">Aşağıdaki örnek, Ara değerli ifadelerle içerir bir `Vegetable` nesnesi, bir üyesi `Unit` numaralandırma, bir <xref:System.DateTime> değeri ve <xref:System.Decimal> değeri.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-131\">The following example includes interpolated expressions with a `Vegetable` object, a member of the `Unit` enumeration, a <xref:System.DateTime> value, and a <xref:System.Decimal> value.</span></span> <span data-ttu-id=\"33ca8-132\">Etkileşimli penceresinde çalıştırın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-132\">Run it in the interactive window.</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic class Example\n{\n   public enum Unit { item, pound, ounce, dozen };\n\n   public static void Main()\n   {\n      var item = new Vegetable(\"eggplant\");\n      var date = DateTime.Now;\n      var price = 1.99m;\n      var unit = Unit.item;\n      Console.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n   }\n}\n```\n\n<span data-ttu-id=\"33ca8-133\">Ara değerli ifadelerden biri içerdiğine dikkat edin `item` nesne konsolda görüntülenen sonuç dizesinde ve bu durumda \"eggplant\" dizesi sonuç dizesine eklenir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-133\">Note that one of the interpolated expressions includes the `item` object in the result string that's displayed to the console, and in this case the string \"eggplant\" is inserted into the result string.</span></span> <span data-ttu-id=\"33ca8-134\">Ara değerli ifade türü bir dize değil, C# Derleyici aşağıdakileri yapar nedeni:</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-134\">That's because, when the type of an interpolated expression is not a string, the C# compiler does the following:</span></span>\n\n- <span data-ttu-id=\"33ca8-135\">Ara değerli ifade ise `null`, Ara değerli ifade boş bir dize döndürür (\"\", veya <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-135\">If the interpolated expression is `null`, the interpolated expression returns an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>\n\n- <span data-ttu-id=\"33ca8-136\">Ara değerli ifade değilse `null`, `ToString` Ara değerli ifade türü yöntemi çağrılır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-136\">If the interpolated expression is not `null`, the `ToString` method of the type of the interpolated expression is called.</span></span> <span data-ttu-id=\"33ca8-137\">Bu tanımını yorum tarafından test `Vegetable.ToString` açıklama simgesini koyarak örnekte yöntemi (`//`), önünde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-137\">You can test this by commenting out the definition of the `Vegetable.ToString` method in the example by putting a comment symbol (`//`) in front of it.</span></span> <span data-ttu-id=\"33ca8-138\">Çıktıda varsayılan davranışı olan tam olarak nitelenmiş tür adıyla (C# REPL türü adı ile birlikte tarafından tanımlanan ad alanı), \"eggplant\" dizesi değiştirilir, <xref:System.Object.ToString?displayProperty=nameWithType> yöntemi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-138\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span>   \n\n<span data-ttu-id=\"33ca8-139\">Bu örnek çıkışı, tarih (eggplant fiyat ikinciye farklılık göstermez) çok kesin ve Fiyat değerini para birimi göstermez.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-139\">In the output from this example, the date is too precise (the price of eggplant does not vary by the second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"33ca8-140\">Sonraki adımda, Ara değerli ifadeleri tarafından döndürülen dize biçimi denetleyerek bu sorunları gidermeye yönelik bilgi edineceksiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-140\">In the next step, you'll learn how to fix those issues by controlling the format of strings returned by interpolated expressions.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"33ca8-141\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-141\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"33ca8-142\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-142\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"33ca8-143\">Ara değerli ifadelerin biçimlendirme denetimi</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-143\">Control the formatting of interpolated expressions</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"33ca8-144\">Önceki Ders iki hatalı biçimlendirilmiş dizeler sonuç dizeye eklendi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-144\">In the previous lesson, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id=\"33ca8-145\">Bir yalnızca tarih uygun bir tarih ve saat değeri idi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-145\">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id=\"33ca8-146\">İkinci para birimi, birim belirtmeyen bir fiyat oluştu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-146\">The second was a price that did not indicate its unit of currency.</span></span> <span data-ttu-id=\"33ca8-147\">Her iki adresine kolay sorunlardır.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-147\">Both issues are easy to address.</span></span> <span data-ttu-id=\"33ca8-148\">Ara değerli ifadeleri içerebilir *biçim dizeleri* kontrol eden biçimlendirme belirli tür.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-148\">Interpolated expressions can include *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id=\"33ca8-149\">Çağrı değiştirme `Console.WriteLine` önceki örnekten tarih ve fiyat alanları için biçim belirticisi aşağıdaki satırda gösterildiği gibi ekleyin:</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-149\">Modify the call to `Console.WriteLine` from the previous example to include the format specifier for the date and price fields as shown in the following line:</span></span>\n\n```csharp\nConsole.WriteLine($\"On {date:d}, the price of {item} was {price:C2} per {unit}.\");\n```\n\n<span data-ttu-id=\"33ca8-150\">Ara değerli ifade bir iki nokta üst üste ve biçim dizesi ile izleyerek bir biçim dizesi belirtin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-150\">You specify a format string by following the interpolated expression with a colon and the format string.</span></span> <span data-ttu-id=\"33ca8-151\">\"d\" bir [standart tarih ve saat biçim dizesi](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) kısa tarih biçiminde temsil eden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-151\">\"d\" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id=\"33ca8-152\">\"C2\" olan bir [standart sayısal biçim dizesi](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) bir sayı olarak iki basamaklı bir para birimi değeri ondalık ayırıcıdan sonra temsil eden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-152\">\"C2\" is a  [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>\n\n<span data-ttu-id=\"33ca8-153\">.NET standart kitaplıkları türlerinde bir dizi önceden tanımlanmış bir biçim dizeleri kümesini destekler.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-153\">A number of types in the .NET Standard libraries support a predefined set of format strings.</span></span> <span data-ttu-id=\"33ca8-154\">Bu, tüm sayısal türler ve tarih ve saat türleri içerir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-154\">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id=\"33ca8-155\">Biçim dizeleri destekleyen türler tam bir listesi için bkz: [biçim dizeleri ve .NET sınıf kitaplığı türleri](../../standard/base-types/formatting-types.md#stringRef) içinde [.NET biçimlendirme türleri](../../standard/base-types/formatting-types.md) makalesi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-155\">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span> <span data-ttu-id=\"33ca8-156\">Herhangi bir tür biçim dizeleri kümesi destekleyebilir ve varolan türleri için özel biçimlendirme sağlayan özel biçimlendirme uzantıları da geliştirebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-156\">Any type can support a set of format strings, and you can also develop custom formatting extensions that provide custom formatting for existing types.</span></span> <span data-ttu-id=\"33ca8-157\">Özel biçimlendirme sağlayarak hakkında bilgi için bir <xref:System.ICustomFormatter> uygulama, bkz: [özel biçimlendirme ICustomFormatter ile](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) içinde [.NET biçimlendirme türleri](../../standard/base-types/formatting-types.md) makale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-157\">For information on custom formatting by providing an <xref:System.ICustomFormatter> implementation, see [Custom Formatting with ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>\n\n<span data-ttu-id=\"33ca8-158\">Değiştirmeyi deneyin biçimi dizeleri **.NET Düzenleyicisi** bunlar tarih ve saat ile sayısal değerin biçimlendirme nasıl etkilediğini görmek için.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-158\">Try modifying the the format strings in the **.NET Editor** to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id=\"33ca8-159\">\"D\" değiştirmek `{date:d}` \"(kısa saat biçimine görüntülemek için) t\", \"(yıl ve ay görüntülemek için) y\" ve \"yyyy\" (yılı dört basamaklı bir sayı görüntülemek için).</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-159\">Change the \"d\" in `{date:d}` to \"t\" (to display the short time format), \"y\" (to display the year and month), and \"yyyy\" (to display the year as a four-digit number).</span></span> <span data-ttu-id=\"33ca8-160\">\"C2\" değiştirmek `{price:C2}` \"e\" (üstel gösterimde) ve (için ondalık ayırıcıdan sonra üç basamaklı sayısal bir değer) \"F3\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-160\">Change the \"C2\" in `{price:C2}` to \"e\" (for exponential notation) and \"F3\" (for a numeric value with three digits after the decimal point).</span></span>\n\n<span data-ttu-id=\"33ca8-161\">Biçimlendirme denetleme ek olarak, bir ara değerli ifadesi tarafından döndürülen dize hizalamasını ve alan genişliği de denetleyebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-161\">In addition to controlling formatting, you can also control the field width and alignment of the strings returned by an interpolated expression.</span></span> <span data-ttu-id=\"33ca8-162\">Sonraki adımda, bunun nasıl yapılacağı öğreneceksiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-162\">In the next step, you'll learn how to do this.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"33ca8-163\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-163\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"33ca8-164\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-164\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"33ca8-165\">Ara değerli ifadeleri hizalamasını ve alan genişliği denetleme</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-165\">Control the field width and alignment of interpolated expressions</span></span>"
  durationInMinutes: 6
  content: "<span data-ttu-id=\"33ca8-166\">Normalde, bir ara değerli ifadesi tarafından döndürülen dize sonuç dizesinde yer aldığında, başında veya sonunda boşluk içeriyor.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-166\">Ordinarily, when the string returned by an interpolated expression is included in a result string, it has no leading or trailing spaces.</span></span> <span data-ttu-id=\"33ca8-167\">Özellikle, kullanmakta olduğunuz bir veri kümesi, Ara değerli ifadeler ile örneklerini alan genişliği ve onun hizalamasını belirtin olanak sağlar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-167\">Particularly for instances in which you are working with a set of data, interpolated expressions let you specify a field width and its alignment.</span></span> <span data-ttu-id=\"33ca8-168\">Bu görmek için aşağıdaki kodu çalıştırın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-168\">To see this, run the following code.</span></span>\n\n```csharp\n  var inventory = new Dictionary<string, int>();\n  inventory.Add(\"hammer, ball pein\", 18);\n  inventory.Add(\"hammer, cross pein\", 5);\n  inventory.Add(\"screwdriver, Phillips #2\", 14);\n\n  Console.WriteLine($\"Inventory on {DateTime.Now:d}\");\n  Console.WriteLine(\" \");\n  Console.WriteLine($\"{\"Item\",-25}    {\"Quantity\",10}\");\n  Console.WriteLine(\" \"); \n  foreach (var item in inventory)\n     Console.WriteLine($\"{item.Key,-25}     {item.Value,10}\");\n```\n\n<span data-ttu-id=\"33ca8-169\">Sola hizalı öğe adları ve bunların sayıları sağa hizalı.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-169\">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id=\"33ca8-170\">Virgül ekleyerek hizalamasını belirtin (\",\") ifade ve alan genişliği belirleme sonra.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-170\">You specify the alignment by adding a comma (\",\") after the expression and designating the field width.</span></span> <span data-ttu-id=\"33ca8-171\">Alan genişliği pozitif bir sayı ise, sağa hizalı alandır:</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-171\">If the field width is a positive number, the field is right-aligned:</span></span>\n\n```text\n{expression, width}\n```\n\n<span data-ttu-id=\"33ca8-172\">Alan genişliği negatif bir sayı ise, sola hizalı alandır:</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-172\">If the field width is a negative number, the field is left-aligned:</span></span>\n\n```text\n{expression, -width}\n```\n<span data-ttu-id=\"33ca8-173\">Gelen negatif işaretler kaldırmayı deneyin `{\"Item\",-25}` ve `{item.Key,-25}` Ara değerli ifadeleri ve örnek yeniden çalıştırın.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-173\">Try removing the negative signs from the `{\"Item\",-25}` and `{item.Key,-25}` interpolated expressions and run the example again.</span></span> <span data-ttu-id=\"33ca8-174\">Bu süre, sağa hizalı öğe adı.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-174\">This time, the item name is right-aligned.</span></span>\n\n<span data-ttu-id=\"33ca8-175\">Bir alan genişliği ve tek bir ara değerli ifadede bir biçim dizesi birleştirebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-175\">You can combine a field width and a format string in a single interpolated expression.</span></span> <span data-ttu-id=\"33ca8-176\">Ardından bir iki nokta üst üste ve biçim dizesi alan genişliği önce gelir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-176\">The field width comes first, followed by a colon and the format string.</span></span> <span data-ttu-id=\"33ca8-177\">Tanımlanan genişlikleriyle ile üç biçimlendirilmiş dizeler görüntüler aşağıdaki basit programı deneyin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-177\">Try the following simple program that displays three formatted strings with defined field widths.</span></span>\n\n```csharp\nConsole.WriteLine($\"{DateTime.Now,-20:d} Hour {DateTime.Now,-10:HH} {1063.342,15:N2} feet\");\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"33ca8-178\">Bu çevrimiçi kodlama önizleme modunda deneyimidir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-178\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"33ca8-179\">Lütfen bunları sorunlarla karşılaşırsanız, rapor [dotnet/deneyin depoyu üzerinde](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-179\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"33ca8-180\">Ara değerli dizeler hızlı başlangıç tamamladınız.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-180\">You've completed the interpolated strings quickstart.</span></span> \n\n<span data-ttu-id=\"33ca8-181\">Bu hızlı başlangıç ipuçları kendi yerel geliştirme ortamı devam edebilirsiniz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-181\">You can continue these quickstarts on your own local development environment.</span></span> <span data-ttu-id=\"33ca8-182\">Temel bilgileri öğrenmek [yerel geliştirme](local-environment.md) ve bir Hızlı Başlangıç'ı seçin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-182\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"33ca8-183\">Aynı Bu alıştırmada deneyin, sonraki hızlı başlangıç doğrudan taşımak veya yeniden başlayın [C# numaraları](numbers-in-csharp-local.md) hızlı başlangıç.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-183\">You can try this same exercise, move directly to the next quickstart, or start again with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"33ca8-184\">Ara değerli dizeler ile çalışma hakkında daha fazla bilgiyi [Ara değerli dizeler](../language-reference/keywords/interpolated-strings.md) C# Başvurusu'nda başlığı.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ca8-184\">You can learn more about working with interpolated strings in the [Interpolated Strings](../language-reference/keywords/interpolated-strings.md) topic in the C# Reference.</span></span>\0"
